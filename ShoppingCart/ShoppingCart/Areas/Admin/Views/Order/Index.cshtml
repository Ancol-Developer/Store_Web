@model IEnumerable<OrderModel>
@{
	ViewData["Title"] = "Order List";

	Paginate pager = new Paginate();

	int pageNo = 0;
	if (ViewBag.Pager is not null)
	{
		pager = (Paginate)ViewBag.Pager;

		pageNo = pager.CurrentPage;
	}
}
<h3>List Order</h3>
<table class="table">
	<thead>
		<tr>
			<th scope="col">#</th>
			<th scope="col">Order Code</th>
			<th scope="col">UserName</th>
			<th scope="col">Order Date</th>
			<th scope="col">Order Status</th>
		</tr>
	</thead>
	<tbody>
		@if (Model is not null && Model.Any())
		{
			foreach (var item in Model)
			{
				<tr>
					<th scope="row">@item.Id</th>
					<td>@item.OrderCode</td>
					<td>@item.Username</td>
					<td>@item.CreatedDate</td>
					<td>
						@if (item.Status == 1)
						{
							<span class="text text-success">Đơn hàng mới</span>
						}
						else
						{
							<span class="text text-success">Đơn hàng thành công</span>
						}
					</td>
					<td>
						<a class="btn btn-warning btn-sm" asp-controller="Order" asp-action="ViewOrder" asp-area="Admin" asp-route-orderCode="@item.OrderCode">View Order</a>
						<a class="btn btn-danger btn-sm confirmDeletion" asp-controller="Order" asp-action="Delete" asp-area="Admin" asp-route-Id="@item.Id">Delete</a>
					</td>
				</tr>
			}
		}
	</tbody>
</table>
@await Html.PartialAsync("_Paging", pager)